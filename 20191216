SpringCloud主要采用的Eureka，Dubbo主要采用的是zookeeper
ribbon
上文只是将服务注册到eureka上，但是consumer还是硬编码调用，前文也有提到这种硬编码方式肯定是不合理的，一来服务上线之后，IP地址肯定是变动的， 再则，采用硬编码的方式是无法实现负载均衡的。

ribbon便是一个用来做负载均衡的组件。

点进spring-cloud-starter-netflix-eureka-client依赖，会发现，这个依赖中已经添加了spring-cloud-starter-netflix-ribbon，故在项目中可以直接使用ribbon，不用重新添加依赖。


<实战Java高并发程序设计>
第一章 介绍 并发的概念，以及并发可能引发的问题

第二章
线程的状态 
NEW 新创建
BLOCKED 等待锁 
Waiting 等待，无时间限制，等待一些特殊的事件。比如通过wait方法等待的线程 等待notify（）。而通过join() 方法等待的线程则会等待目标线程的终止，
一旦等到期望的事件，线程就会再次执行，进入 RUNNABLE状态


wait和notify
 当一个对象实例上调用Wait()方法后，当前线程就会在这个对象上等待。
 比如线程A中调用了obj.wait()方法，那么线程A 就会停止继续执行，转为等待状态，等待到何时结束？
 线程A 会一直等到其他线程调用了 obj.notify（）方法为止









正确关闭线程的方法
